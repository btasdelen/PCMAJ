
DATAIN	BIT P2.0
CS	BIT P2.4
IOCLK	BIT P2.1
ADDRESS	BIT P2.2
EOC	BIT P2.3

ADC_PORT EQU P2

ORG 0
LJMP MAIN

MAIN:
SETB CS
CLR IOCLK

ACALL CONFIGURE_LCD

ACALL GET_DATA

MOV R1, #50h
LOOP:	MOV A, @R1
ANL A, #01
ADD A, #30h
ACALL SEND_DATA
INC R1
CJNE R1, #5Ah, LOOP

SJMP $


GET_DATA:
MOV R0, #10
MOV R1, #50h
MOV A, #10h	; 0001 channel for x axis

CLR CS
SEND_X:
RLC A
MOV ADDRESS, C

SETB IOCLK

NOP
NOP

CLR IOCLK

DJNZ R0, SEND_X
;END OF ADDRESSING X
SETB CS

JB EOC, $
MOV R0, #10
MOV A, #20h	; 0010 cHAnnel for y axis
JNB EOC, $	; WAIT FOR RISING EDGE OF EOC

CLR CS
TAKE_X_SEND_Y:
RLC A
MOV ADDRESS, C

SETB IOCLK

MOV @R1, ADC_PORT
INC R1

CLR IOCLK

DJNZ R0, TAKE_X_SEND_Y
;END OF TAKING X, ADDRESSING Y
SETB CS

JB EOC, $
MOV R0, #10
JNB EOC, $	; WAIT FOR RISING EDGE OF EOC

CLR CS

TAKE_Y:
NOP
NOP

SETB IOCLK

MOV @R1, ADC_PORT
INC R1

CLR IOCLK

DJNZ R0, TAKE_Y

SETB CS

RET

CONFIGURE_LCD:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
mov a,#38H	;TWO LINES, 5X7 MATRIX
acall SEND_COMMAND
mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
acall SEND_COMMAND
mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
acall SEND_COMMAND
mov a,#01H	;CLEAR DISPLAY SCREEN
acall SEND_COMMAND
mov a,#80H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
acall SEND_COMMAND
ret


;P1.0-P1.7 ARE CONNECTED TO LCD DATA PINS D0-D7
;P3.5 IS CONNECTED TO RS
;P3.6 IS CONNECTED TO R/W
;P3.7 IS CONNECTED TO E

SEND_COMMAND:	;THIS  SUBROUTINE IS FOR SENDING THE COMMANDS TO LCD
mov p1,a	;THE COMMAND IS STORED IN A, SEND IT TO LCD
clr p3.5	;RS=0 BEFORE SENDING COMMAND
clr p3.6	;R/W=0 TO WRITE
setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
acall DELAY
clr p3.7
ret


SEND_DATA:	;THIS  SUBROUTINE IS FOR SENDING THE DATA TO BE DISPLAYED
mov p1,a	;SEND THE DATA STORED IN A TO LCD
setb p3.5	;RS=1 BEFORE SENDING DATA
clr p3.6	;R/W=0 TO WRITE
setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
acall DELAY
clr p3.7
ret


DELAY:	;A SHORT DELAY SUBROUTINE
	push 0
	push 1
	mov r0,#50
	DELAY_OUTER_LOOP:
	mov r1,#255
	djnz r1,$
	djnz r0,DELAY_OUTER_LOOP
	pop 1
	pop 0
	ret
END

